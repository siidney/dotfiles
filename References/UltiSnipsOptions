!   Overwrite - This snippet will overwrite all previously defined
       snippets with this tab trigger. Default is to let the user choose at
       expansion which snippet to expand. This option is useful to overwrite
       bundled tab stops with user defined ones.

   b   Beginning of line - This snippet will only be expanded if you are at
       the beginning of a line (that is if there are only whitespaces in front
       of the cursor). Default is to expand snippets at every position, even
       in the middle of a line. Most of my snippets have this option set, it
       keeps UltiSnips out of the way.

   i   Inword expansion - Normally, triggers need whitespace before them to be
       expanded. With this option, triggers are also expanded in the middle of
       a word.

   w   Word boundary - Normally, triggers need whitespace before them to be
       expanded. With this option, the trigger will be expanded at a "word"
       boundary as well, where word characters are letters, digits, and the
       underscore character ('_').  This enables expansion of a trigger that
       adjoins punctuation (for example) without expanding suffixes of larger
       words.

   r   Regular expression - This uses a python regular expression for the
       match. The regular expression MUST be surrounded like a multi-word
       trigger (see above) even if it doesn't have any spaces. The resulting
       match is also passed to any python code blocks in your snippet
       definition as the local variable "match".

   t   Don't expand tabs - By default, UltiSnips tries to expand leading tabs
       in a snippet to match the results of automatic indentation. If this
       option is set, UltiSnips will not try to do this expansion, and will
       leave the tabs alone. This can be useful for snippets dealing with
       tab delimited formats, etc.

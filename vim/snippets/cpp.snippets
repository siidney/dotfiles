# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> ${2:v};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`}{
		${2}
	}
# Class
snippet cl
	class ${1:`Filename('$1', 'name')`}${2}{
	    public:
		    $1(${3:});
		    ~$1();${4:}

	    private:${5:}
	};
snippet fori
	for(int ${1:i}=${2:0}; $1${3:<count}; ${4:++}$1){
		${5:/* code */}
	}
# Constructor
snippet ct
	${1:`Filename('$1', 'name')`}::$1(${2})${3}{
		${4}
	}
# Destructor
snippet dt
	${1:`Filename('$1', 'name')`}::~$1(){
		${2}
	}
# Constructor and Destructor
snippet ctdt
	${1:`Filename('$1', 'name')`}::$1(${2}){
		${3}
	}
	$1::~$1(){
		${4}
	}
# comment block
snippet /**
	/*****************************************************************
	*   ${1}
	*****************************************************************/
# std::cout
snippet cout
	std::cout << 
# std::cin
snippet cin
	std::cin >> 
# std::endl
snippet endl
	<< std::endl;
# std::cout << std::endl
snippet cendl
	std::cout << std::endl;
# std::setw()
snippet setw
	std::setw(${1})
# std::setprecision()
snippet setprecision
	std::setprecision(${1}) ${2}
# insert filename
snippet fname
	${1:`Filename('$1', 'name')`}${2}
# std::string
snippet string
	std::string
# Function with class name
snippet funcl
	${1:void} `Filename()`::${2:function}(${3})${4}{
		${5:}
	}

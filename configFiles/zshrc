# The following lines were added by compinstall
zstyle :compinstall filename '/home/siid/.zshrc'

export EDITOR=/usr/bin/vim
export VISUAL=/usr/bin/vim
export BROWSER=/usr/bin/luakit
export TERMCMD="urxvt"
export TERMINAL="urxvt -e"
export GPG_TTY=$(tty)
export GPG_AGENT_INFO=""
#export http_proxy="http://localhost:8118"

# WINE ALIASES
# wine 32bit
alias wine32="WINEPREFIX='/home/siid/.wine32'"
# Skyrim
alias skyrim="WINEPREFIX='/home/siid/.TESV'"
# Fallout New Vegas
alias fnv="WINEPREFIX='/home/siid/.FNV'"
# Vampire The Masquerade Bloodlines
alias vtmb="WINEARCH=win32 WINEPREFIX='/home/siid/.VTMB'"

# STEAM
# TombRaider
alias tombraider="LD_PRELOAD=â€¦/Steam/ubuntu12_32/gameoverlayrenderer.so ~/.local/share/Steam/steamapps/common/Tomb\ Raider/bin/TombRaider"
# Borderlands The Pre-Sequel
alias ssldir="SSL_CERT_DIR='/etc/ssl/certs'"

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt HIST_IGNORE_DUPS
# End of lines configured by zsh-newuser-install
#
# allows prompt edits
autoload -U promptinit
promptinit
prompt redhat
#
# Enables help
autoload -U run-help
autoload run-help-git
autoload run-help-svn
autoload run-help-svk
autoload run-help-vim
alias help=run-help
#
# Keybindings
# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"     ]]  && bindkey  "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]]  && bindkey  "${key[End]}"      end-of-line
[[ -n "${key[Insert]}"   ]]  && bindkey  "${key[Insert]}"   overwrite-mode
[[ -n "${key[Delete]}"   ]]  && bindkey  "${key[Delete]}"   delete-char
[[ -n "${key[Up]}"       ]]  && bindkey  "${key[Up]}"       up-line-or-history
[[ -n "${key[Down]}"     ]]  && bindkey  "${key[Down]}"     down-line-or-history
[[ -n "${key[Left]}"     ]]  && bindkey  "${key[Left]}"     backward-char
[[ -n "${key[Right]}"    ]]  && bindkey  "${key[Right]}"    forward-char
[[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"   beginning-of-buffer-or-history
[[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}" end-of-buffer-or-history

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        printf '%s' "${terminfo[smkx]}"
    }
    function zle-line-finish () {
        printf '%s' "${terminfo[rmkx]}"
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi
